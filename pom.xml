<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>AppiumMavenGrpID</groupId>
  <artifactId>AppiumFramework</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <name>AppiumFramework</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.source>1.8</maven.compiler.source>
  </properties>

  <dependencies>
    
    <!-- https://mvnrepository.com/artifact/io.appium/java-client -->
<dependency>
   <groupId>io.appium</groupId>
   <artifactId>java-client</artifactId>
    <version>7.6.0</version>
 </dependency>

<!-- While executing the below line in 'AndroidAPPBaseEcommerceApp' class, we got the error mentioned below thefore we removed the Selenium dependancy from pom.xml -->
<!-- AndroidDriver driver=new AndroidDriver<>(new URL("http://127.0.0.1:4723/wd/hub"),cap); -->
<!-- Exception in thread "main" java.lang.NoClassDefFoundError: org/openqa/selenium/virtualauthenticator/HasVirtualAuthenticator -->

<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<!-- <dependency> -->
<!-- <groupId>org.seleniumhq.selenium</groupId> -->
<!-- <artifactId>selenium-java</artifactId> -->
<!-- <version>4.0.0</version> -->
<!-- </dependency> -->

<!-- https://mvnrepository.com/artifact/org.testng/testng -->
<dependency>
    <groupId>org.testng</groupId>
    <artifactId>testng</artifactId>
    <version>7.4.0</version>
 <!-- Always remove the scope attribute from the TestNG dependency before running the Maven commands else execution fails with an error "Compilation failure' package org.testng' does not exists" -->
 <!-- <scope>test</scope> -->
</dependency>


<!-- We need the following 4 dependencies i.e. the JAR files for the following dependencies to start & stop Appium Server programmatically -->
<!-- slf4j-simple -->
<!-- slf4j-api -->
<!-- commons-lang3 -->
<!-- commons-io -->
<!-- commons-validator -->

<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple -->
<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-simple</artifactId>
    <version>1.7.32</version>
    <scope>test</scope>
</dependency>

<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-api</artifactId>
    <version>1.7.32</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
<dependency>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-lang3</artifactId>
    <version>3.12.0</version>
</dependency>

<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
<dependency>
    <groupId>commons-io</groupId>
    <artifactId>commons-io</artifactId>
    <version>2.11.0</version>
</dependency>

<!-- https://mvnrepository.com/artifact/commons-validator/commons-validator -->
<dependency>
    <groupId>commons-validator</groupId>
    <artifactId>commons-validator</artifactId>
    <version>1.7</version>
</dependency>

<!-- Following dependency is required for extent reports -->
<!-- Using latest version 5.0.9, there are errors in ExtendReporterNG.java therefore use 4.0.0. as advised by the instructor in one of the Q&A post-->
<!-- https://mvnrepository.com/artifact/com.aventstack/extentreports -->
<dependency>
    <groupId>com.aventstack</groupId>
    <artifactId>extentreports</artifactId>
    <version>4.0.0</version>
</dependency>

  </dependencies>

  <build>
  
  <!-- Convert Project Maven Compatible by updating pom.xml (i.e. run testng.xml from pom.xml)-->
  <!-- Following resources tags are included to make Project Maven Compatible and run testng.xml from pom.xml -->
  <!-- Since our resources i.e. listeners are located in src/main/java/resources, update the path accordingly in the resources tag.-->
  <resources>
     <resource>
       <directory>src/main/java/resources</directory>
     </resource>
   </resources>
  
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        
         <!-- Commenting below maven surefire plugin as it is included below in the pom.xml to make Project Maven Compatible and run testng.xml from pom.xml -->
        <!-- <plugin> -->
          <!-- <artifactId>maven-surefire-plugin</artifactId> -->
          <!-- <version>2.22.1</version> -->
        <!-- </plugin> -->
        
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        
         <!-- Convert Project Maven Compatible by updating pom.xml (i.e. run testng.xml from pom.xml)-->
         <!-- Following plugin is included to make Project Maven Compatible and run testng.xml from pom.xml -->
        <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M5</version>
        <configuration>
          <suiteXmlFiles>
            <suiteXmlFile>testngcloud.xml</suiteXmlFile>
          </suiteXmlFiles>
        </configuration>
      </plugin>
      
      </plugins>
    </pluginManagement>
  </build>
</project>
